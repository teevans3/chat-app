{"ast":null,"code":"var _jsxFileName = \"/Users/thomasevans/Desktop/code/portfolio/chat-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Split from 'react-split';\nimport './App.css';\nimport Header from './components/Header';\nimport Chatrooms from './components/Chatrooms/Chatrooms';\nimport Chat from './components/Chat/Chat';\nimport CreateModal from './components/Chatrooms/CreateModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [activeRoom, setActiveRoom] = useState('default');\n  const [chatrooms, setChatrooms] = useState(['default', 'room 1', 'room 2']);\n  const [displayCreateModal, setDisplayCreateModal] = useState(false);\n  const [chatroomsWidth, setChatroomsWidth] = useState(null);\n  const [keyboardHeight, setKeyboardHeight] = useState(null); // RESIZING BOTH CHATROOMS (WIDTH) AND KEYBOARD (HEIGHT)\n  // find a way to factor this code??\n\n  const chatroomsResizeObserver = new ResizeObserver(() => {\n    setChatroomsWidth(document.getElementById('chatroomsContainer').offsetWidth);\n  });\n  const keyboardResizeObserver = new ResizeObserver(() => {\n    setKeyboardHeight(document.getElementById('keyboardContainer').offsetHeight);\n  });\n  useEffect(() => {\n    chatroomsResizeObserver.observe(document.getElementById('chatroomsContainer'));\n    return () => {\n      chatroomsResizeObserver.unobserve(document.getElementById('chatroomsContainer'));\n    };\n  }, []);\n  useEffect(() => {\n    keyboardResizeObserver.observe(document.getElementById('keyboardContainer'));\n    return () => {\n      keyboardResizeObserver.unobserve(document.getElementById('keyboardContainer'));\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(AppContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SplitContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Chatrooms, {\n        chatroomsWidth: chatroomsWidth,\n        chatrooms: chatrooms,\n        setActiveRoom: setActiveRoom,\n        activeRoom: activeRoom,\n        setDisplayCreateModal: () => {\n          setDisplayCreateModal(!displayCreateModal);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Chat, {\n        chatroomsWidth: chatroomsWidth,\n        activeRoom: activeRoom,\n        keyboardHeight: keyboardHeight\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), displayCreateModal ? /*#__PURE__*/_jsxDEV(CreateModal, {\n      setChatrooms: setChatrooms,\n      chatrooms: chatrooms,\n      setDisplayCreateModal: setDisplayCreateModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ci+U8bZMryX/lLjveRy3nkL9WSY=\");\n\n_c = App;\nexport default App;\nconst AppContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  background-color: black;\n  width: 100%;\n  min-height: 100vh;\n  position: relative;\n`;\n_c2 = AppContainer;\nconst SplitContainer = styled.div`\n\n`;\n_c3 = SplitContainer;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"AppContainer\");\n$RefreshReg$(_c3, \"SplitContainer\");","map":{"version":3,"sources":["/Users/thomasevans/Desktop/code/portfolio/chat-app/src/App.js"],"names":["React","useState","useEffect","styled","Split","Header","Chatrooms","Chat","CreateModal","App","activeRoom","setActiveRoom","chatrooms","setChatrooms","displayCreateModal","setDisplayCreateModal","chatroomsWidth","setChatroomsWidth","keyboardHeight","setKeyboardHeight","chatroomsResizeObserver","ResizeObserver","document","getElementById","offsetWidth","keyboardResizeObserver","offsetHeight","observe","unobserve","AppContainer","div","SplitContainer"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport styled from 'styled-components';\nimport Split from 'react-split';\n\nimport './App.css';\nimport Header from './components/Header';\nimport Chatrooms from './components/Chatrooms/Chatrooms';\nimport Chat from './components/Chat/Chat';\nimport CreateModal from './components/Chatrooms/CreateModal';\n\nfunction App() {\n  const [activeRoom, setActiveRoom] = useState('default');\n  const [chatrooms, setChatrooms] = useState(['default', 'room 1', 'room 2']);\n\n  const [displayCreateModal, setDisplayCreateModal] = useState(false);\n\n  const [chatroomsWidth, setChatroomsWidth] = useState(null);\n  const [keyboardHeight, setKeyboardHeight] = useState(null);\n\n\n  // RESIZING BOTH CHATROOMS (WIDTH) AND KEYBOARD (HEIGHT)\n  // find a way to factor this code??\n  const chatroomsResizeObserver = new ResizeObserver(() => {\n      setChatroomsWidth(document.getElementById('chatroomsContainer').offsetWidth)\n  });\n  const keyboardResizeObserver = new ResizeObserver(() => {\n      setKeyboardHeight(document.getElementById('keyboardContainer').offsetHeight);\n  })\n\n  useEffect(() => {\n      chatroomsResizeObserver.observe(document.getElementById('chatroomsContainer'))\n      return () => {\n        chatroomsResizeObserver.unobserve(document.getElementById('chatroomsContainer'));\n      }\n  }, [])\n\n  useEffect(() => {\n      keyboardResizeObserver.observe(document.getElementById('keyboardContainer'));\n      return () => {\n        keyboardResizeObserver.unobserve(document.getElementById('keyboardContainer'));\n      }\n  })\n\n\n  return (\n    <AppContainer>\n      <Header />\n      <SplitContainer>\n        <Chatrooms\n          chatroomsWidth={chatroomsWidth}\n          chatrooms={chatrooms}\n          setActiveRoom={setActiveRoom}\n          activeRoom={activeRoom}\n          setDisplayCreateModal={() => {setDisplayCreateModal(!displayCreateModal)}}\n        />\n        <Chat\n          chatroomsWidth={chatroomsWidth}\n          activeRoom={activeRoom}\n          keyboardHeight={keyboardHeight}\n        />\n      </SplitContainer>\n      {displayCreateModal ?\n      <CreateModal\n        setChatrooms={setChatrooms}\n        chatrooms={chatrooms}\n        setDisplayCreateModal={setDisplayCreateModal}\n      /> : null}\n    </AppContainer>\n  );\n}\n\nexport default App;\n\nconst AppContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  background-color: black;\n  width: 100%;\n  min-height: 100vh;\n  position: relative;\n`\n\nconst SplitContainer = styled.div`\n\n`"]},"metadata":{},"sourceType":"module"}