{"ast":null,"code":"var _jsxFileName = \"/Users/thomasevans/Desktop/code/portfolio/chat-app/client/src/components/Chat/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Keyboard from './Keyboard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chat = props => {\n  _s();\n\n  const [roomMessages, setRoomMessages] = useState([]); // filter out messages to specific room\n\n  useEffect(() => {\n    setRoomMessages(props.messages.filter(msg => msg.roomId === props.activeRoom.id));\n  }, [props]);\n  useEffect(() => {\n    console.log(roomMessages);\n  }, [roomMessages]);\n  return /*#__PURE__*/_jsxDEV(ChatContainer, {\n    children: [/*#__PURE__*/_jsxDEV(ChatArea, {\n      children: roomMessages.map((msg, index) => {\n        return /*#__PURE__*/_jsxDEV(MessageDiv, {\n          children: [/*#__PURE__*/_jsxDEV(SenderInfo, {\n            myMessage: msg.userId === props.user.id ? true : false,\n            display: index !== 0 && msg.userId === roomMessages[index - 1].userId ? false : true,\n            children: [msg.username, \" | \", msg.time]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 33\n          }, this), msg.userId === props.user.id ? /*#__PURE__*/_jsxDEV(MyMessage, {\n            children: msg.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 37\n          }, this) : /*#__PURE__*/_jsxDEV(TheirMessage, {\n            children: msg.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Keyboard, {\n      darkMode: props.darkMode,\n      messages: props.messages,\n      setMessages: props.setMessages,\n      activeRoom: props.activeRoom,\n      user: props.user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Chat, \"P4OP8NBn8Q9zMihMTsgCY1Rv+7A=\");\n\n_c = Chat;\nexport default Chat;\nconst ChatContainer = styled.div`\n    box-sizing: border-box;\n    width: 100%;\n    height: auto;\n    display: flex;\n    flex-direction: column;\n    padding: 1rem 0;\n    border-radius: 60px;\n`;\n/*     height: calc(100% - 6rem); */\n\n_c2 = ChatContainer;\nconst ChatArea = styled.div`\n    height: 39rem;\n    overflow: scroll;\n    width: 100%;\n    box-sizing: border-box;\n    border-left: none;\n    color: white;\n    margin-bottom: 1rem;\n    \n`;\n_c3 = ChatArea;\nconst MessageDiv = styled.div`\n    display: flex;\n    margin: 0.2rem 2rem;\n    flex-direction: column;\n`;\n_c4 = MessageDiv;\nconst SenderInfo = styled.p`\n    padding: 0;\n    margin: 0;\n    color: gray;\n    font-size: 0.8rem;\n    align-self: ${props => props.myMessage ? 'flex-end' : 'flex-start'};\n    display: ${props => props.display ? 'flex' : 'none'}\n`;\n_c5 = SenderInfo;\nconst MyMessage = styled.div`\n    margin-left: auto;\n    background-color: #147efb;\n    padding: 0.7rem;\n    border-radius: 24px;\n`;\n_c6 = MyMessage;\nconst TheirMessage = styled.div`\n    width: auto;\n    background-color: #333333;\n    padding: 0.7rem;\n    border-radius: 24px;\n    margin-right: auto;\n`;\n_c7 = TheirMessage;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"Chat\");\n$RefreshReg$(_c2, \"ChatContainer\");\n$RefreshReg$(_c3, \"ChatArea\");\n$RefreshReg$(_c4, \"MessageDiv\");\n$RefreshReg$(_c5, \"SenderInfo\");\n$RefreshReg$(_c6, \"MyMessage\");\n$RefreshReg$(_c7, \"TheirMessage\");","map":{"version":3,"sources":["/Users/thomasevans/Desktop/code/portfolio/chat-app/client/src/components/Chat/Chat.js"],"names":["React","useState","useEffect","styled","Keyboard","Chat","props","roomMessages","setRoomMessages","messages","filter","msg","roomId","activeRoom","id","console","log","map","index","userId","user","username","time","text","darkMode","setMessages","ChatContainer","div","ChatArea","MessageDiv","SenderInfo","p","myMessage","display","MyMessage","TheirMessage"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport styled from 'styled-components'\n\nimport Keyboard from './Keyboard';\n\n\nconst Chat = (props) => {\n    const [roomMessages, setRoomMessages] = useState([]);\n\n    // filter out messages to specific room\n    useEffect(() => {\n        setRoomMessages(props.messages.filter(msg => msg.roomId === props.activeRoom.id))\n    }, [props]);\n\n    useEffect(() => {\n        console.log(roomMessages);\n    }, [roomMessages])\n\n    return (\n        <ChatContainer>\n            <ChatArea>\n                {roomMessages.map((msg, index) => {\n                        return (\n                            <MessageDiv>\n                                {/* dont display sender info in any consecutive messages! (only first) */}\n                                <SenderInfo\n                                    myMessage={msg.userId === props.user.id ? true : false}\n                                    display={\n                                        (index !== 0) &&\n                                        (msg.userId === roomMessages[index - 1].userId)\n                                        ? false : true\n                                    }\n                                >\n                                    {msg.username} | {msg.time}\n                                </SenderInfo>\n                                {msg.userId === props.user.id ? \n                                    <MyMessage>{msg.text}</MyMessage>\n                                :   <TheirMessage>{msg.text}</TheirMessage>\n                                }\n                            </MessageDiv>\n                        )\n                })}\n            </ChatArea>\n            <Keyboard\n                darkMode={props.darkMode}\n                messages={props.messages}\n                setMessages={props.setMessages}\n                activeRoom={props.activeRoom}\n                user={props.user}\n            />\n        </ChatContainer>\n    )\n}\n\nexport default Chat;\n\nconst ChatContainer = styled.div`\n    box-sizing: border-box;\n    width: 100%;\n    height: auto;\n    display: flex;\n    flex-direction: column;\n    padding: 1rem 0;\n    border-radius: 60px;\n`\n\n/*     height: calc(100% - 6rem); */\nconst ChatArea = styled.div`\n    height: 39rem;\n    overflow: scroll;\n    width: 100%;\n    box-sizing: border-box;\n    border-left: none;\n    color: white;\n    margin-bottom: 1rem;\n    \n`\n\nconst MessageDiv = styled.div`\n    display: flex;\n    margin: 0.2rem 2rem;\n    flex-direction: column;\n`\n\nconst SenderInfo = styled.p`\n    padding: 0;\n    margin: 0;\n    color: gray;\n    font-size: 0.8rem;\n    align-self: ${props => props.myMessage ? 'flex-end' : 'flex-start'};\n    display: ${props => props.display ? 'flex' : 'none'}\n`\n\nconst MyMessage = styled.div`\n    margin-left: auto;\n    background-color: #147efb;\n    padding: 0.7rem;\n    border-radius: 24px;\n`\n\nconst TheirMessage = styled.div`\n    width: auto;\n    background-color: #333333;\n    padding: 0.7rem;\n    border-radius: 24px;\n    margin-right: auto;\n`\n"]},"metadata":{},"sourceType":"module"}