{"ast":null,"code":"var _jsxFileName = \"/Users/thomasevans/Desktop/code/portfolio/chat-app/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport openSocket from 'socket.io-client';\nimport styled from 'styled-components';\nimport Split from 'react-split';\nimport './App.css';\nimport Layout from './components/Layout';\nimport Header from './components/Header';\nimport CreateAccount from './components/CreateAccount';\nimport Chatrooms from './components/Chatrooms/Chatrooms';\nimport Chat from './components/Chat/Chat';\nimport CreateModal from './components/Chatrooms/CreateModal'; // ADD LOADING COMPONENT\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [user, setUser] = useState(null);\n  const [activeRoom, setActiveRoom] = useState();\n  const [messages, setMessages] = useState([]);\n  const [chatrooms, setChatrooms] = useState([]);\n  const [displayCreateModal, setDisplayCreateModal] = useState(false);\n  useEffect(() => {\n    const socket = openSocket('http://localhost:8080'); // retrieve user info, if they have been here before\n\n    socket.emit('initialize', {\n      username: localStorage.getItem('username')\n    }); // retrieve and set chatrooms from server\n\n    socket.on('initialize', data => {\n      setUser(data.user);\n      setActiveRoom(data.rooms[0]);\n      setChatrooms(data.rooms);\n      setMessages(data.messages);\n    }); // listen for newly created rooms\n\n    socket.on('new room', data => {\n      setChatrooms(data.rooms);\n    }); // listen for newly created messages\n\n    socket.on('new message', data => {\n      setMessages(data.messages);\n    });\n  }, []);\n  useEffect(() => {\n    console.log(user);\n  }, [user]);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(AppContainer, {\n      children: !user ? /*#__PURE__*/_jsxDEV(CreateAccount, {\n        setUser: setUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(SplitContainer, {\n          sizes: [15, 85],\n          minSize: [140, 800],\n          gutterSize: 4,\n          children: [/*#__PURE__*/_jsxDEV(Chatrooms, {\n            chatrooms: chatrooms,\n            setActiveRoom: setActiveRoom,\n            activeRoom: activeRoom,\n            setDisplayCreateModal: () => {\n              setDisplayCreateModal(!displayCreateModal);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Chat, {\n            activeRoom: activeRoom,\n            messages: messages,\n            user: user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), displayCreateModal ? /*#__PURE__*/_jsxDEV(CreateModal, {\n          setChatrooms: setChatrooms,\n          chatrooms: chatrooms,\n          setDisplayCreateModal: setDisplayCreateModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"FcZMaux2pBXw17d2pTx0E6iPEFc=\");\n\n_c = App;\nexport default App;\nconst AppContainer = styled.div`\n  box-sizing: border-box;\n  border-radius: 20px;\n  overflow: hidden;\n  width: 80rem;\n  height: 46rem;\n  margin: auto;\n  position: relative;\n  background: white;\n  background: linear-gradient(to right bottom, rgba(255, 255, 255, 0.7), rgba(255, 255, 255, 0.3));\n`;\n_c2 = AppContainer;\nconst SplitContainer = styled(Split)`\n  display: flex;\n  width: 100%;\n\n  & .gutter {\n    background-color: gray;\n\n    &:hover {\n      cursor: col-resize;\n    }\n  }\n`;\n_c3 = SplitContainer;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"AppContainer\");\n$RefreshReg$(_c3, \"SplitContainer\");","map":{"version":3,"sources":["/Users/thomasevans/Desktop/code/portfolio/chat-app/client/src/App.js"],"names":["React","useState","useEffect","openSocket","styled","Split","Layout","Header","CreateAccount","Chatrooms","Chat","CreateModal","App","user","setUser","activeRoom","setActiveRoom","messages","setMessages","chatrooms","setChatrooms","displayCreateModal","setDisplayCreateModal","socket","emit","username","localStorage","getItem","on","data","rooms","console","log","AppContainer","div","SplitContainer"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport openSocket from 'socket.io-client';\nimport styled from 'styled-components';\nimport Split from 'react-split';\n\nimport './App.css';\nimport Layout from './components/Layout';\nimport Header from './components/Header';\nimport CreateAccount from './components/CreateAccount';\nimport Chatrooms from './components/Chatrooms/Chatrooms';\nimport Chat from './components/Chat/Chat';\nimport CreateModal from './components/Chatrooms/CreateModal';\n\n// ADD LOADING COMPONENT\n\nfunction App() {\n  const [user, setUser] = useState(null);\n  const [activeRoom, setActiveRoom] = useState();\n  const [messages, setMessages] = useState([]);\n  const [chatrooms, setChatrooms] = useState([]);\n\n  const [displayCreateModal, setDisplayCreateModal] = useState(false);\n\n  useEffect(() => {\n    const socket = openSocket('http://localhost:8080');\n\n    // retrieve user info, if they have been here before\n    socket.emit('initialize', {\n      username: localStorage.getItem('username')\n    })\n\n    // retrieve and set chatrooms from server\n    socket.on('initialize', data => {\n        setUser(data.user);\n        setActiveRoom(data.rooms[0]);\n        setChatrooms(data.rooms);\n        setMessages(data.messages);\n    })\n\n    // listen for newly created rooms\n    socket.on('new room', data => {\n        setChatrooms(data.rooms);\n    })\n\n    // listen for newly created messages\n    socket.on('new message', data => {\n        setMessages(data.messages);\n    })\n\n  }, [])\n\n  useEffect(() => {\n    console.log(user);\n  }, [user])\n\n  return (\n    <Layout>\n      <AppContainer>\n        {!user ? \n          <CreateAccount setUser={setUser} />\n        :\n          <>\n            <SplitContainer sizes={[15, 85]} minSize={[140, 800]} gutterSize={4}>\n              <Chatrooms\n                chatrooms={chatrooms}\n                setActiveRoom={setActiveRoom}\n                activeRoom={activeRoom}\n                setDisplayCreateModal={() => {setDisplayCreateModal(!displayCreateModal)}}\n              />\n              <Chat\n                activeRoom={activeRoom}\n                messages={messages}\n                user={user}\n              />\n            </SplitContainer>\n            {displayCreateModal ?\n            <CreateModal\n              setChatrooms={setChatrooms}\n              chatrooms={chatrooms}\n              setDisplayCreateModal={setDisplayCreateModal}\n            /> : null}\n          </>\n        }\n        \n      </AppContainer>\n    </Layout>\n  );\n}\n\nexport default App;\n\nconst AppContainer = styled.div`\n  box-sizing: border-box;\n  border-radius: 20px;\n  overflow: hidden;\n  width: 80rem;\n  height: 46rem;\n  margin: auto;\n  position: relative;\n  background: white;\n  background: linear-gradient(to right bottom, rgba(255, 255, 255, 0.7), rgba(255, 255, 255, 0.3));\n`\n\nconst SplitContainer = styled(Split)`\n  display: flex;\n  width: 100%;\n\n  & .gutter {\n    background-color: gray;\n\n    &:hover {\n      cursor: col-resize;\n    }\n  }\n`"]},"metadata":{},"sourceType":"module"}