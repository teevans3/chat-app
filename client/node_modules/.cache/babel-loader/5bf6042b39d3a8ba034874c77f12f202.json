{"ast":null,"code":"var _jsxFileName = \"/Users/thomasevans/Desktop/code/portfolio/chat-app/client/src/components/Chat/Chat.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport Keyboard from './Keyboard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chat = props => {\n  return /*#__PURE__*/_jsxDEV(ChatContainer, {\n    children: [/*#__PURE__*/_jsxDEV(ChatArea, {\n      children: props.messages.map((msg, index) => {\n        if (props.activeRoom.id === msg.roomId) {\n          return /*#__PURE__*/_jsxDEV(MessageDiv, {\n            children: [/*#__PURE__*/_jsxDEV(SenderInfo, {\n              myMessage: msg.userId === props.user.id ? true : false,\n              display: index !== 0 && msg.userId === props.messages[index - 1].userId ? false : true,\n              children: [msg.username, \" | \", msg.time]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 33\n            }, this), msg.userId === props.user.id ? /*#__PURE__*/_jsxDEV(MyMessage, {\n              children: msg.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(TheirMessage, {\n              children: msg.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 29\n          }, this);\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Keyboard, {\n      messages: props.messages,\n      setMessages: props.setMessages,\n      activeRoom: props.activeRoom,\n      user: props.user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Chat;\nexport default Chat;\nconst ChatContainer = styled.div`\n    box-sizing: border-box;\n    width: 100%;\n    height: auto;\n    display: flex;\n    flex-direction: column;\n    padding\n`;\n/*     height: calc(100% - 6rem); */\n\n_c2 = ChatContainer;\nconst ChatArea = styled.div`\n    height: 100%;\n    overflow: auto;\n    width: 100%;\n    box-sizing: border-box;\n    border: 1px solid black;\n    border-left: none;\n    background-color: black;\n    color: white;\n`;\n_c3 = ChatArea;\nconst MessageDiv = styled.div`\n    display: flex;\n    margin: 0.2rem 2rem;\n    flex-direction: column;\n`;\n_c4 = MessageDiv;\nconst SenderInfo = styled.p`\n    padding: 0;\n    margin: 0;\n    color: gray;\n    font-size: 0.8rem;\n    align-self: ${props => props.myMessage ? 'flex-end' : 'flex-start'};\n    display: ${props => props.display ? 'block' : 'none'}\n`;\n_c5 = SenderInfo;\nconst MyMessage = styled.div`\n    margin-left: auto;\n    background-color: #147efb;\n    padding: 0.7rem;\n    border-radius: 24px;\n`;\n_c6 = MyMessage;\nconst TheirMessage = styled.div`\n    width: auto;\n    background-color: #333333;\n    padding: 0.7rem;\n    border-radius: 24px;\n    margin-right: auto;\n`;\n_c7 = TheirMessage;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"Chat\");\n$RefreshReg$(_c2, \"ChatContainer\");\n$RefreshReg$(_c3, \"ChatArea\");\n$RefreshReg$(_c4, \"MessageDiv\");\n$RefreshReg$(_c5, \"SenderInfo\");\n$RefreshReg$(_c6, \"MyMessage\");\n$RefreshReg$(_c7, \"TheirMessage\");","map":{"version":3,"sources":["/Users/thomasevans/Desktop/code/portfolio/chat-app/client/src/components/Chat/Chat.js"],"names":["React","styled","Keyboard","Chat","props","messages","map","msg","index","activeRoom","id","roomId","userId","user","username","time","text","setMessages","ChatContainer","div","ChatArea","MessageDiv","SenderInfo","p","myMessage","display","MyMessage","TheirMessage"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,QAAP,MAAqB,YAArB;;;AAGA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAEpB,sBACI,QAAC,aAAD;AAAA,4BACI,QAAC,QAAD;AAAA,gBACKA,KAAK,CAACC,QAAN,CAAeC,GAAf,CAAmB,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAChC,YAAIJ,KAAK,CAACK,UAAN,CAAiBC,EAAjB,KAAwBH,GAAG,CAACI,MAAhC,EAAwC;AACpC,8BACI,QAAC,UAAD;AAAA,oCAEI,QAAC,UAAD;AACI,cAAA,SAAS,EAAEJ,GAAG,CAACK,MAAJ,KAAeR,KAAK,CAACS,IAAN,CAAWH,EAA1B,GAA+B,IAA/B,GAAsC,KADrD;AAEI,cAAA,OAAO,EAAEF,KAAK,KAAK,CAAV,IAAgBD,GAAG,CAACK,MAAJ,KAAeR,KAAK,CAACC,QAAN,CAAeG,KAAK,GAAG,CAAvB,EAA0BI,MAAzD,GAAmE,KAAnE,GAA2E,IAFxF;AAAA,yBAIKL,GAAG,CAACO,QAJT,SAIsBP,GAAG,CAACQ,IAJ1B;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,EAQKR,GAAG,CAACK,MAAJ,KAAeR,KAAK,CAACS,IAAN,CAAWH,EAA1B,gBACG,QAAC,SAAD;AAAA,wBAAYH,GAAG,CAACS;AAAhB;AAAA;AAAA;AAAA;AAAA,oBADH,gBAEG,QAAC,YAAD;AAAA,wBAAeT,GAAG,CAACS;AAAnB;AAAA;AAAA;AAAA;AAAA,oBAVR;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ;AAeH;AACJ,OAlBA;AADL;AAAA;AAAA;AAAA;AAAA,YADJ,eAsBI,QAAC,QAAD;AACI,MAAA,QAAQ,EAAEZ,KAAK,CAACC,QADpB;AAEI,MAAA,WAAW,EAAED,KAAK,CAACa,WAFvB;AAGI,MAAA,UAAU,EAAEb,KAAK,CAACK,UAHtB;AAII,MAAA,IAAI,EAAEL,KAAK,CAACS;AAJhB;AAAA;AAAA;AAAA;AAAA,YAtBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA+BH,CAjCD;;KAAMV,I;AAmCN,eAAeA,IAAf;AAEA,MAAMe,aAAa,GAAGjB,MAAM,CAACkB,GAAI;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;AASA;;MATMD,a;AAUN,MAAME,QAAQ,GAAGnB,MAAM,CAACkB,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;MAAMC,Q;AAWN,MAAMC,UAAU,GAAGpB,MAAM,CAACkB,GAAI;AAC9B;AACA;AACA;AACA,CAJA;MAAME,U;AAMN,MAAMC,UAAU,GAAGrB,MAAM,CAACsB,CAAE;AAC5B;AACA;AACA;AACA;AACA,kBAAkBnB,KAAK,IAAIA,KAAK,CAACoB,SAAN,GAAkB,UAAlB,GAA+B,YAAa;AACvE,eAAepB,KAAK,IAAIA,KAAK,CAACqB,OAAN,GAAgB,OAAhB,GAA0B,MAAO;AACzD,CAPA;MAAMH,U;AASN,MAAMI,SAAS,GAAGzB,MAAM,CAACkB,GAAI;AAC7B;AACA;AACA;AACA;AACA,CALA;MAAMO,S;AAON,MAAMC,YAAY,GAAG1B,MAAM,CAACkB,GAAI;AAChC;AACA;AACA;AACA;AACA;AACA,CANA;MAAMQ,Y","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nimport Keyboard from './Keyboard';\n\n\nconst Chat = (props) => {\n\n    return (\n        <ChatContainer>\n            <ChatArea>\n                {props.messages.map((msg, index) => {\n                    if (props.activeRoom.id === msg.roomId) {\n                        return (\n                            <MessageDiv>\n                                {/* dont display sender info in any consecutive messages! (only first) */}\n                                <SenderInfo\n                                    myMessage={msg.userId === props.user.id ? true : false}\n                                    display={index !== 0 && (msg.userId === props.messages[index - 1].userId) ? false : true}\n                                >\n                                    {msg.username} | {msg.time}\n                                </SenderInfo>\n                                {msg.userId === props.user.id ? \n                                    <MyMessage>{msg.text}</MyMessage>\n                                :   <TheirMessage>{msg.text}</TheirMessage>\n                                }\n                            </MessageDiv>\n                        )\n                    }\n                })}\n            </ChatArea>\n            <Keyboard\n                messages={props.messages}\n                setMessages={props.setMessages}\n                activeRoom={props.activeRoom}\n                user={props.user}\n            />\n        </ChatContainer>\n    )\n}\n\nexport default Chat;\n\nconst ChatContainer = styled.div`\n    box-sizing: border-box;\n    width: 100%;\n    height: auto;\n    display: flex;\n    flex-direction: column;\n    padding\n`\n\n/*     height: calc(100% - 6rem); */\nconst ChatArea = styled.div`\n    height: 100%;\n    overflow: auto;\n    width: 100%;\n    box-sizing: border-box;\n    border: 1px solid black;\n    border-left: none;\n    background-color: black;\n    color: white;\n`\n\nconst MessageDiv = styled.div`\n    display: flex;\n    margin: 0.2rem 2rem;\n    flex-direction: column;\n`\n\nconst SenderInfo = styled.p`\n    padding: 0;\n    margin: 0;\n    color: gray;\n    font-size: 0.8rem;\n    align-self: ${props => props.myMessage ? 'flex-end' : 'flex-start'};\n    display: ${props => props.display ? 'block' : 'none'}\n`\n\nconst MyMessage = styled.div`\n    margin-left: auto;\n    background-color: #147efb;\n    padding: 0.7rem;\n    border-radius: 24px;\n`\n\nconst TheirMessage = styled.div`\n    width: auto;\n    background-color: #333333;\n    padding: 0.7rem;\n    border-radius: 24px;\n    margin-right: auto;\n`\n"]},"metadata":{},"sourceType":"module"}