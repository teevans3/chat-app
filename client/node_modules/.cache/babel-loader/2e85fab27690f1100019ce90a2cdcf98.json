{"ast":null,"code":"var _jsxFileName = \"/Users/thomasevans/Desktop/code/portfolio/chat-app/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport openSocket from 'socket.io-client';\nimport styled from 'styled-components';\nimport Split from 'react-split';\nimport './App.css';\nimport Header from './components/Header';\nimport CreateAccount from './components/CreateAccount';\nimport Chatrooms from './components/Chatrooms/Chatrooms';\nimport Chat from './components/Chat/Chat';\nimport CreateModal from './components/Chatrooms/CreateModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [user, setUser] = useState(null);\n  const [activeRoom, setActiveRoom] = useState();\n  const [messages, setMessages] = useState([]);\n  const [chatrooms, setChatrooms] = useState([]);\n  const [displayCreateModal, setDisplayCreateModal] = useState(false);\n  useEffect(() => {\n    const socket = openSocket('http://localhost:8080');\n    socket.emit('initialize', {\n      username: localStorage.getItem('username')\n    }); // retrieve and set chatrooms from server\n\n    socket.on('initialize', data => {\n      setUser(data.user);\n      setActiveRoom(data.rooms[0]);\n      setChatrooms(data.rooms);\n      setMessages(data.messages);\n    }); // listen for newly created rooms\n\n    socket.on('new room', data => {\n      setChatrooms(data.rooms);\n    }); // listen for newly created messages\n\n    socket.on('new message', data => {\n      setMessages(data.messages);\n    });\n  }, []);\n  useEffect(() => {\n    console.log(user);\n  }, [user]);\n  return /*#__PURE__*/_jsxDEV(AppContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), !user ? /*#__PURE__*/_jsxDEV(CreateAccount, {\n      setUser: setUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(SplitContainer, {\n        sizes: [15, 85],\n        minSize: [140, 800],\n        gutterSize: 4,\n        children: [/*#__PURE__*/_jsxDEV(Chatrooms, {\n          chatrooms: chatrooms,\n          setActiveRoom: setActiveRoom,\n          activeRoom: activeRoom,\n          setDisplayCreateModal: () => {\n            setDisplayCreateModal(!displayCreateModal);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Chat, {\n          activeRoom: activeRoom,\n          messages: messages\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), displayCreateModal ? /*#__PURE__*/_jsxDEV(CreateModal, {\n        setChatrooms: setChatrooms,\n        chatrooms: chatrooms,\n        setDisplayCreateModal: setDisplayCreateModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"FcZMaux2pBXw17d2pTx0E6iPEFc=\");\n\n_c = App;\nexport default App;\nconst AppContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  background-color: black;\n  width: 100%;\n  min-height: 100vh;\n  position: relative;\n`;\n_c2 = AppContainer;\nconst SplitContainer = styled(Split)`\n  display: flex;\n  width: 100%;\n\n  & .gutter {\n    background-color: #202020;\n\n    &:hover {\n      cursor: col-resize;\n    }\n  }\n`;\n_c3 = SplitContainer;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"AppContainer\");\n$RefreshReg$(_c3, \"SplitContainer\");","map":{"version":3,"sources":["/Users/thomasevans/Desktop/code/portfolio/chat-app/client/src/App.js"],"names":["React","useState","useEffect","openSocket","styled","Split","Header","CreateAccount","Chatrooms","Chat","CreateModal","App","user","setUser","activeRoom","setActiveRoom","messages","setMessages","chatrooms","setChatrooms","displayCreateModal","setDisplayCreateModal","socket","emit","username","localStorage","getItem","on","data","rooms","console","log","AppContainer","div","SplitContainer"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport openSocket from 'socket.io-client';\nimport styled from 'styled-components';\nimport Split from 'react-split';\n\nimport './App.css';\nimport Header from './components/Header';\nimport CreateAccount from './components/CreateAccount';\nimport Chatrooms from './components/Chatrooms/Chatrooms';\nimport Chat from './components/Chat/Chat';\nimport CreateModal from './components/Chatrooms/CreateModal';\n\nfunction App() {\n  const [user, setUser] = useState(null);\n  const [activeRoom, setActiveRoom] = useState();\n  const [messages, setMessages] = useState([]);\n  const [chatrooms, setChatrooms] = useState([]);\n\n  const [displayCreateModal, setDisplayCreateModal] = useState(false);\n\n  useEffect(() => {\n    const socket = openSocket('http://localhost:8080');\n\n    socket.emit('initialize', {\n      username: localStorage.getItem('username')\n    })\n\n    // retrieve and set chatrooms from server\n    socket.on('initialize', data => {\n        setUser(data.user);\n        setActiveRoom(data.rooms[0]);\n        setChatrooms(data.rooms);\n        setMessages(data.messages);\n    })\n\n    // listen for newly created rooms\n    socket.on('new room', data => {\n        setChatrooms(data.rooms);\n    })\n\n    // listen for newly created messages\n    socket.on('new message', data => {\n        setMessages(data.messages);\n    })\n\n  }, [])\n\n  useEffect(() => {\n    console.log(user);\n  }, [user])\n\n  return (\n    <AppContainer>\n      <Header />\n      {!user ? \n        <CreateAccount setUser={setUser} />\n      :\n        <>\n          <SplitContainer sizes={[15, 85]} minSize={[140, 800]} gutterSize={4}>\n            <Chatrooms\n              chatrooms={chatrooms}\n              setActiveRoom={setActiveRoom}\n              activeRoom={activeRoom}\n              setDisplayCreateModal={() => {setDisplayCreateModal(!displayCreateModal)}}\n            />\n            <Chat\n              activeRoom={activeRoom}\n              messages={messages}\n            />\n          </SplitContainer>\n          {displayCreateModal ?\n          <CreateModal\n            setChatrooms={setChatrooms}\n            chatrooms={chatrooms}\n            setDisplayCreateModal={setDisplayCreateModal}\n          /> : null}\n        </>\n      }\n      \n    </AppContainer>\n  );\n}\n\nexport default App;\n\nconst AppContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  background-color: black;\n  width: 100%;\n  min-height: 100vh;\n  position: relative;\n`\n\nconst SplitContainer = styled(Split)`\n  display: flex;\n  width: 100%;\n\n  & .gutter {\n    background-color: #202020;\n\n    &:hover {\n      cursor: col-resize;\n    }\n  }\n`"]},"metadata":{},"sourceType":"module"}