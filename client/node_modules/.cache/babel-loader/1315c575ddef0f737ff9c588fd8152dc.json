{"ast":null,"code":"var _jsxFileName = \"/Users/thomasevans/Desktop/code/portfolio/chat-app/client/src/components/Chat/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Keyboard from './Keyboard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chat = props => {\n  _s();\n\n  const [roomMessages, setRoomMessages] = useState([]); // filter out messages to specific room\n\n  useEffect(() => {\n    setRoomMessages(props.messages.filter(msg => msg.roomId === props.activeRoom.id));\n  }, [props]); // convert ISO date string to a nice display\n\n  const convertDate = dateString => {\n    const date = new Date(dateString);\n    let hours = date.getHours();\n    let meridiem = 'am';\n\n    if (hours > 12) {\n      hours = hours - 12;\n      meridiem = 'pm';\n    }\n\n    let minutes = date.getMinutes();\n\n    if (minutes > 10) {\n      minutes = `0${minutes}`;\n    }\n\n    return `${date.getFullYear()}-${date.getMonth() + 1}-${date.getDate()} ${hours}:${minutes}${meridiem}`;\n  };\n\n  return /*#__PURE__*/_jsxDEV(ChatContainer, {\n    children: [/*#__PURE__*/_jsxDEV(ChatArea, {\n      children: roomMessages.map((msg, index) => {\n        console.log(msg.time);\n\n        if (!roomMessages[index + 1]) {\n          return /*#__PURE__*/_jsxDEV(MessageDiv, {\n            children: [/*#__PURE__*/_jsxDEV(SenderInfo, {\n              display: true,\n              myMessage: msg.userId === props.user.id ? true : false,\n              children: [msg.username, \" | \", convertDate(msg.time)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 37\n            }, this), msg.userId === props.user.id ? /*#__PURE__*/_jsxDEV(MyMessage, {\n              children: msg.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 41\n            }, this) : /*#__PURE__*/_jsxDEV(TheirMessage, {\n              children: msg.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 33\n          }, this);\n        }\n\n        return /*#__PURE__*/_jsxDEV(MessageDiv, {\n          children: [/*#__PURE__*/_jsxDEV(SenderInfo, {\n            myMessage: msg.userId === props.user.id ? true : false,\n            display: index !== index.length && msg.userId === roomMessages[index + 1].userId ? false : true,\n            children: [msg.username, \" | \", convertDate(msg.time)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 33\n          }, this), msg.userId === props.user.id ? /*#__PURE__*/_jsxDEV(MyMessage, {\n            children: msg.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 37\n          }, this) : /*#__PURE__*/_jsxDEV(TheirMessage, {\n            children: msg.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Keyboard, {\n      darkMode: props.darkMode,\n      messages: props.messages,\n      setMessages: props.setMessages,\n      activeRoom: props.activeRoom,\n      user: props.user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Chat, \"pmkEMTKMz21D6jV6/x0qM5lxzWA=\");\n\n_c = Chat;\nexport default Chat;\nconst ChatContainer = styled.div`\n    box-sizing: border-box;\n    width: 100%;\n    height: auto;\n    display: flex;\n    flex-direction: column;\n    border-radius: 60px;\n`;\n/*     height: calc(100% - 6rem); */\n\n_c2 = ChatContainer;\nconst ChatArea = styled.div`\n    height: 40rem;\n    overflow: auto;\n    width: 100%;\n    box-sizing: border-box;\n    border-left: none;\n    color: white;\n    margin-bottom: 1rem;  \n    display: flex;\n    flex-direction: column-reverse;\n \n`;\n_c3 = ChatArea;\nconst MessageDiv = styled.div`\n    display: flex;\n    margin: 0.2rem 2rem;\n    flex-direction: column;\n`;\n_c4 = MessageDiv;\nconst SenderInfo = styled.p`\n    padding: 0;\n    margin: 0;\n    color: gray;\n    font-size: 0.8rem;\n    align-self: ${props => props.myMessage ? 'flex-end' : 'flex-start'};\n    display: ${props => props.display ? 'flex' : 'none'}\n`;\n_c5 = SenderInfo;\nconst MyMessage = styled.div`\n    margin-left: auto;\n    background-color: #147efb;\n    padding: 0.7rem;\n    border-radius: 24px;\n    max-width: 70%;\n`;\n_c6 = MyMessage;\nconst TheirMessage = styled.div`\n    width: auto;\n    background-color: #333333;\n    padding: 0.7rem;\n    border-radius: 24px;\n    margin-right: auto;\n    max-width: 70%;\n`;\n_c7 = TheirMessage;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"Chat\");\n$RefreshReg$(_c2, \"ChatContainer\");\n$RefreshReg$(_c3, \"ChatArea\");\n$RefreshReg$(_c4, \"MessageDiv\");\n$RefreshReg$(_c5, \"SenderInfo\");\n$RefreshReg$(_c6, \"MyMessage\");\n$RefreshReg$(_c7, \"TheirMessage\");","map":{"version":3,"sources":["/Users/thomasevans/Desktop/code/portfolio/chat-app/client/src/components/Chat/Chat.js"],"names":["React","useState","useEffect","styled","Keyboard","Chat","props","roomMessages","setRoomMessages","messages","filter","msg","roomId","activeRoom","id","convertDate","dateString","date","Date","hours","getHours","meridiem","minutes","getMinutes","getFullYear","getMonth","getDate","map","index","console","log","time","userId","user","username","text","length","darkMode","setMessages","ChatContainer","div","ChatArea","MessageDiv","SenderInfo","p","myMessage","display","MyMessage","TheirMessage"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport styled from 'styled-components'\n\nimport Keyboard from './Keyboard';\n\n\nconst Chat = (props) => {\n    const [roomMessages, setRoomMessages] = useState([]);\n\n    // filter out messages to specific room\n    useEffect(() => {\n        setRoomMessages(props.messages.filter(msg => msg.roomId === props.activeRoom.id))\n    }, [props]);\n\n    // convert ISO date string to a nice display\n    const convertDate = (dateString) => {\n        const date = new Date(dateString);\n\n        let hours = date.getHours();\n        let meridiem = 'am';\n        if (hours > 12) {\n            hours = hours - 12;\n            meridiem = 'pm';\n        }\n\n        let minutes = date.getMinutes();\n        if (minutes > 10) {\n            minutes = `0${minutes}`\n        }\n        return `${date.getFullYear()}-${date.getMonth() + 1}-${date.getDate()} ${hours}:${minutes}${meridiem}`;\n    }\n\n    return (\n        <ChatContainer>\n            <ChatArea>\n                {roomMessages.map((msg, index) => {\n                        console.log(msg.time);\n                        if (!roomMessages[index + 1]) {\n                            return (\n                                <MessageDiv>\n                                    <SenderInfo display={true} myMessage={msg.userId === props.user.id ? true : false}>\n                                        {msg.username} | {convertDate(msg.time)}\n                                    </SenderInfo>\n                                    {msg.userId === props.user.id ? \n                                        <MyMessage>{msg.text}</MyMessage>\n                                    :   <TheirMessage>{msg.text}</TheirMessage>\n                                    }\n                                </MessageDiv>\n                            )\n                        }\n                        return (\n                            <MessageDiv>\n                                {/* dont display sender info in any consecutive messages! (only first) */}\n                                <SenderInfo\n                                    myMessage={msg.userId === props.user.id ? true : false}\n                                    display={\n                                        (index !== index.length) &&\n                                        (msg.userId === roomMessages[index + 1].userId)\n                                        ? false : true\n                                    }\n                                >\n                                    {msg.username} | {convertDate(msg.time)}\n                                </SenderInfo>\n                                {msg.userId === props.user.id ? \n                                    <MyMessage>{msg.text}</MyMessage>\n                                :   <TheirMessage>{msg.text}</TheirMessage>\n                                }\n                            </MessageDiv>\n                        )\n                })}\n            </ChatArea>\n            <Keyboard\n                darkMode={props.darkMode}\n                messages={props.messages}\n                setMessages={props.setMessages}\n                activeRoom={props.activeRoom}\n                user={props.user}\n            />\n        </ChatContainer>\n    )\n}\n\nexport default Chat;\n\nconst ChatContainer = styled.div`\n    box-sizing: border-box;\n    width: 100%;\n    height: auto;\n    display: flex;\n    flex-direction: column;\n    border-radius: 60px;\n`\n\n\n/*     height: calc(100% - 6rem); */\nconst ChatArea = styled.div`\n    height: 40rem;\n    overflow: auto;\n    width: 100%;\n    box-sizing: border-box;\n    border-left: none;\n    color: white;\n    margin-bottom: 1rem;  \n    display: flex;\n    flex-direction: column-reverse;\n \n`\n\nconst MessageDiv = styled.div`\n    display: flex;\n    margin: 0.2rem 2rem;\n    flex-direction: column;\n`\n\nconst SenderInfo = styled.p`\n    padding: 0;\n    margin: 0;\n    color: gray;\n    font-size: 0.8rem;\n    align-self: ${props => props.myMessage ? 'flex-end' : 'flex-start'};\n    display: ${props => props.display ? 'flex' : 'none'}\n`\n\nconst MyMessage = styled.div`\n    margin-left: auto;\n    background-color: #147efb;\n    padding: 0.7rem;\n    border-radius: 24px;\n    max-width: 70%;\n`\n\nconst TheirMessage = styled.div`\n    width: auto;\n    background-color: #333333;\n    padding: 0.7rem;\n    border-radius: 24px;\n    margin-right: auto;\n    max-width: 70%;\n`\n"]},"metadata":{},"sourceType":"module"}